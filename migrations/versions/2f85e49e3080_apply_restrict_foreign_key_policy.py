"""Apply restrict foreign key policy

Revision ID: 2f85e49e3080
Revises: 06e0624aced8
Create Date: 2025-08-29 12:06:31.640387

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2f85e49e3080'
down_revision: Union[str, Sequence[str], None] = '06e0624aced8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('students_classId_fkey'), 'students', type_='foreignkey')
    op.create_foreign_key(None, 'students', 'classes', ['classId'], ['id'], ondelete='RESTRICT')
    op.drop_constraint(op.f('transactions_bookId_fkey'), 'transactions', type_='foreignkey')
    op.drop_constraint(op.f('transactions_classId_fkey'), 'transactions', type_='foreignkey')
    op.drop_constraint(op.f('transactions_studentId_fkey'), 'transactions', type_='foreignkey')
    op.create_foreign_key(None, 'transactions', 'classes', ['classId'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'transactions', 'students', ['studentId'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'transactions', 'books', ['bookId'], ['id'], ondelete='RESTRICT')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.create_foreign_key(op.f('transactions_studentId_fkey'), 'transactions', 'students', ['studentId'], ['id'])
    op.create_foreign_key(op.f('transactions_classId_fkey'), 'transactions', 'classes', ['classId'], ['id'])
    op.create_foreign_key(op.f('transactions_bookId_fkey'), 'transactions', 'books', ['bookId'], ['id'])
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.create_foreign_key(op.f('students_classId_fkey'), 'students', 'classes', ['classId'], ['id'])
    # ### end Alembic commands ###
